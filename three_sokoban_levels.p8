pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
-- three sokoban levels
-- coyboy

-- board size
rows = 8
cols = 8

function blueprint_from_sprite(level_sprite)
  -- draw the sprite at 1,1 instead of 0,0 so looping through
  -- rows and columns can also start at 1, as is the lua way
  spr(level_sprite, 1, 1)
  local blueprint = {}
  -- 2d array for the level
  for x = 1, cols do
		blueprint[x] = {}
		for y = 1, rows do
			blueprint[x][y] = pget(x, y)
		end
	end
  return blueprint
end

-- global stuff
history = {}
goals = {}
levels = {006, 007, 008}
level_index = 1
level_complete = false
delay = 0
blueprint = blueprint_from_sprite(levels[level_index])

-- edit mode stuff
edit_mode = false
cursor = {
  x = 1,
  y = 1,
  just_placed = false,
  piece_colors = {002, 005, 007, 014, 015},
  index = 1,
  attempt_move = function(self, dir)
    local dest = {self.x + dir[1], self.y + dir[2]}
    if tile_exists(dest) then
      self.x = dest[1]
      self.y = dest[2]
      self.just_placed = false
    end
  end,
  draw = function(self)
    rect(screen_x(self.x) - 2, screen_y(self.y) - 2, screen_x(self.x) + 8, screen_y(self.y) + 8, self.piece_colors[self.index])
    rect(screen_x(self.x) - 3, screen_y(self.y) - 3, screen_x(self.x) + 9, screen_y(self.y) + 9, 000)
  end,
}

function _init()
  -- build the current level
  build_board(blueprint)
end

function _update60()

  if btnp(5) then
    -- edit_mode = not edit_mode
    history = {}
    build_board(blueprint)
  end

  -- edit mode
  if edit_mode then
    if btnp(4) then
      if cursor.just_placed then
        cursor.index += 1
        if (cursor.index > #cursor.piece_colors) cursor.index = 1
      end
      blueprint[cursor.x][cursor.y] = cursor.piece_colors[cursor.index]
      cursor.just_placed = true
    else
      for i = 1, 4 do
        -- using `i - 1` because arrow key values are 0,1,2,3
        if btnp(i - 1) then
          -- this maps directions to button input values
          local dirs = {{-1,0},{1,0},{0,-1},{0,1}}
          cursor:attempt_move(dirs[i])
        end
      end
    end

  -- play mode
  else
    if delay > 0 then
      delay -= 1
    elseif level_complete and level_index < #levels then
      history = {}
      level_index += 1
      goals = {}
      blueprint = blueprint_from_sprite(levels[level_index])
      build_board(blueprint)
    elseif level_complete then
      return
    -- undo
    elseif btnp(4) and #history > 0 then
      undo()
    else
      for i = 1, 4 do
        -- using `i - 1` because arrow key values are 0,1,2,3
        if btnp(i - 1) then
          update_history()
          -- this maps directions to button input values
          local dirs = {{-1,0},{1,0},{0,-1},{0,1}}
          -- move all heroes
          for next in all(heroes) do
            next:attempt_move(dirs[i], dirs[i])
          end
          for next in all(heroes) do
            next.moved_by_other = false
          end
        end
      end
      level_complete = is_level_complete()
      if level_complete then
        delay = 60
      end
    end
  end
end

function _draw()
  -- clear the screen
  cls()

  -- draw the floor
  for x = 1, cols do
		for y = 1, rows do
			spr(002, screen_x(x), screen_y(y))
		end
	end
  -- edit mode stuff
  if edit_mode then
    for x = 1, cols do
      for y = 1, rows do
        local map = {
          [005] = 004,
          [015] = 003,
          [002] = 001,
          [014] = 005,
        }
        local color = blueprint[x][y]
        spr(map[color], screen_x(x), screen_y(y))
      end
    cursor:draw()
    local m = "edit mode"
    print(m, 64 - #m * 2, 15, 007)
	end
  -- play mode stuff
  else
    local m = level_complete and level_index == #levels and "you win!" or level_complete and "nice!" or "level " .. level_index
    print(m, 64 - #m * 2, 15, 007)
    m = level_complete and "" or "z:undo x:restart"
    print(m, 64 - #m * 2, 108, 005)
    for next in all(pieces) do
      next:draw()
    end
    for next in all(goals) do
      next:draw()
    end
  end

  -- draw grid
  -- for x = -1, 128, 8 do
  --   for y = -1, 128, 8 do
  --     pset(x, y, 014)
  --     pset(x+1, y, 014)
  --     pset(x, y+1, 014)
  --     pset(x+1, y+1, 014)
  --   end
  -- end
end

-- using `piece` as a thing that goes on the board
function new_piece()
  local piece = {
    set_tile = function(self, x, y)
      -- remove it from its current tile, if it's in one
      if self.x and self.y then
        del(board[self.x][self.y], self)
      end
      -- set its x and y values
      self.x = x
      self.y = y
      -- put it in its new tile
      add(board[self.x][self.y], self)
    end,
    move = function(self, dir)
      local dest = {self.x + dir[1], self.y + dir[2]}
      -- if the tile exists and nothing is in the destination tile
      if tile_exists(dest) and tile_content(dest) == nil then
        self:set_tile(self.x + dir[1], self.y + dir[2])
      end
    end,
    draw = function(self)
      spr(self.sprite, screen_x(self.x), screen_y(self.y))
    end,
  }
  add(pieces, piece)
  return piece
end

function new_hero()
  local hero = new_piece()
  hero.sprite = 001
  hero.color = 002
  hero.fixed = false

  hero.attempt_move = function(self, dir)

    if self.moved_by_other then
      return
    end
    local next = {self.x, self.y}

    -- make a list of everything that can be moved
    local things_to_move = {}
    while true do
      if tile_exists(next) and tile_content(next) != nil then
        local thing = tile_content(next)
        -- if there's a wall, then nothing moves
        if thing.fixed then
          things_to_move = {}
          break
        else
          add(things_to_move, thing)
          if thing.sprite == 001 then
            thing.moved_by_other = true
          end
        end
        next = {next[1] + dir[1], next[2] + dir[2]}
      else
        break
      end
    end

    -- attempt to move things, starting with the one that was
    -- furthest from the hero
    for j = #things_to_move, 1, -1 do
      things_to_move[j]:move(dir)
    end
  end

  add(heroes, hero)
  return hero
end

function new_goal()
  local goal = {
    color = 014,
    sprite = 005,
    x = x,
    y = y,
  -- goal has a special set_tile because it doesn't get added to
  -- `board`. we need the goal's tile to technically be empty so
  -- the hero can step into it
    set_tile = function(self, x, y)
      self.x = x
      self.y = y
    end,
    draw = function(self)
      spr(self.sprite, screen_x(self.x), screen_y(self.y))
    end,
  }
  add(goals, goal)
  return goal
end

-- creates a wall
function new_wall()
  local wall = new_piece()
  wall.sprite = 004
  wall.color = 005
  wall.fixed = true
  return wall
end

-- creates a block
function new_block()
  local block = new_piece()
  block.sprite = 003
  block.color = 015
  block.fixed = false
  return block
end

function blueprint_from_board()
  local blueprint = {}
  for x = 1, cols do
		blueprint[x] = {}
		for y = 1, rows do
      local piece = board[x][y][1]
      if piece then
        blueprint[x][y] = piece.color
      end
		end
	end
  return blueprint
end

function build_board(blueprint)

  -- global stuff for play mode
  board = {}
  pieces = {}
  heroes = {}
  level_complete = false

  color_mappings = {
    [005] = new_wall,
    [015] = new_block,
    [002] = new_hero,
    [014] = new_goal,
  }

  -- add stuff to the board
	for x = 1, cols do
		board[x] = {}
		for y = 1, rows do
      -- 2d array for the board
			board[x][y] = {}
      -- get the function in color_mappings that matches the
      -- current color in the level sprite
      local next = color_mappings[blueprint[x][y]]
      -- set tiles for stuff from the level sprite
      if next then
        next():set_tile(x, y)
      end
		end
	end
end

function update_history()
  local board_copy = blueprint_from_board()
  add(history, board_copy)
end

function undo()
  local previous = history[#history]
  del(history, previous)
  build_board(previous)
end

-- checks to see if all goals are occupied by heroes
function is_level_complete()
  local complete = true
  for next in all(goals) do
    local content = tile_content({next.x, next.y})
    if not (content and content.sprite == 001) then
      complete = false
    end
  end
  return complete
end

-- check if a tile actually exists on the board
function tile_exists(tile)
  return tile[1] >= 1 and tile[1] <= cols and tile[2] >= 1 and tile[2] <= rows
end

-- get the content of a tile
function tile_content(tile)
  -- tiles should only have 1 thing in them at a time for now
  return board[tile[1]][tile[2]][1]
end

-- get x screen position from x board position
function screen_x(x)
  local offset = 64 - cols * 4
  return (x - 1) * 8 + offset
end

-- get y screen position from y board position
function screen_y(y)
  local offset = 64 - rows * 4
  return (y - 1) * 8 + offset
end

__gfx__
000000000000000077777777ffffffff55555555eeeeeeee7772777777eeee772f27777500000000000000000000000000000000000000000000000000000000
000000000002200077777777ffffffff55555555eee00eee75fff55777777777f2f7775700000000000000000000000000000000000000000000000000000000
007007000002200077777777ffffffff55555555eee00eee75f7eff7557555572f27777700000000000000000000000000000000000000000000000000000000
000770000222222077777777ffffffff55555555e000000e7ff557f72ff77ff27777577700000000000000000000000000000000000000000000000000000000
000770000002200077777777ffffffff55555555eee00eee7f755ff75f5555f57775777700000000000000000000000000000000000000000000000000000000
007007000020020077777777ffffffff55555555ee0ee0ee7fff7f575ffffff577777e7e00000000000000000000000000000000000000000000000000000000
000000000020020077777777ffffffff55555555ee0ee0ee755fff5727f55f72757777e700000000000000000000000000000000000000000000000000000000
000000000000000077777777ffffffff55555555eeeeeeee777777775577777557777e7e00000000000000000000000000000000000000000000000000000000
__label__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000700077707070777070000000770000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000700070007070700070000000070000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000700077007070770070000000070000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000700070007770700070000000070000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000777077700700777077700000777000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000777777707777777077777770777777707777777077777770777777707777777000000000000000000000000000000000
00000000000000000000000000000000777777707777777077777770777277707777777077777770777777707777777000000000000000000000000000000000
00000000000000000000000000000000777777707777777077777770722222707777777077777770777777707777777000000000000000000000000000000000
00000000000000000000000000000000777777707777777077777770777277707777777077777770777777707777777000000000000000000000000000000000
00000000000000000000000000000000777777707777777077777770772727707777777077777770777777707777777000000000000000000000000000000000
00000000000000000000000000000000777777707777777077777770772727707777777077777770777777707777777000000000000000000000000000000000
00000000000000000000000000000000777777707777777077777770777777707777777077777770777777707777777000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000007777777055555550fffffff0fffffff0fffffff055555550555555507777777000000000000000000000000000000000
000000000000000000000000000000007777777055555550fffffff0fffffff0fffffff055555550555555507777777000000000000000000000000000000000
000000000000000000000000000000007777777055555550fffffff0fffffff0fffffff055555550555555507777777000000000000000000000000000000000
000000000000000000000000000000007777777055555550fffffff0fffffff0fffffff055555550555555507777777000000000000000000000000000000000
000000000000000000000000000000007777777055555550fffffff0fffffff0fffffff055555550555555507777777000000000000000000000000000000000
000000000000000000000000000000007777777055555550fffffff0fffffff0fffffff055555550555555507777777000000000000000000000000000000000
000000000000000000000000000000007777777055555550fffffff0fffffff0fffffff055555550555555507777777000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000007777777055555550fffffff077777770eeeeeee0fffffff0fffffff07777777000000000000000000000000000000000
000000000000000000000000000000007777777055555550fffffff077777770eee7eee0fffffff0fffffff07777777000000000000000000000000000000000
000000000000000000000000000000007777777055555550fffffff077777770e77777e0fffffff0fffffff07777777000000000000000000000000000000000
000000000000000000000000000000007777777055555550fffffff077777770eee7eee0fffffff0fffffff07777777000000000000000000000000000000000
000000000000000000000000000000007777777055555550fffffff077777770ee7e7ee0fffffff0fffffff07777777000000000000000000000000000000000
000000000000000000000000000000007777777055555550fffffff077777770ee7e7ee0fffffff0fffffff07777777000000000000000000000000000000000
000000000000000000000000000000007777777055555550fffffff077777770eeeeeee0fffffff0fffffff07777777000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000077777770fffffff0fffffff0555555505555555077777770fffffff07777777000000000000000000000000000000000
0000000000000000000000000000000077777770fffffff0fffffff0555555505555555077777770fffffff07777777000000000000000000000000000000000
0000000000000000000000000000000077777770fffffff0fffffff0555555505555555077777770fffffff07777777000000000000000000000000000000000
0000000000000000000000000000000077777770fffffff0fffffff0555555505555555077777770fffffff07777777000000000000000000000000000000000
0000000000000000000000000000000077777770fffffff0fffffff0555555505555555077777770fffffff07777777000000000000000000000000000000000
0000000000000000000000000000000077777770fffffff0fffffff0555555505555555077777770fffffff07777777000000000000000000000000000000000
0000000000000000000000000000000077777770fffffff0fffffff0555555505555555077777770fffffff07777777000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000077777770fffffff0777777705555555055555550fffffff0fffffff07777777000000000000000000000000000000000
0000000000000000000000000000000077777770fffffff0777777705555555055555550fffffff0fffffff07777777000000000000000000000000000000000
0000000000000000000000000000000077777770fffffff0777777705555555055555550fffffff0fffffff07777777000000000000000000000000000000000
0000000000000000000000000000000077777770fffffff0777777705555555055555550fffffff0fffffff07777777000000000000000000000000000000000
0000000000000000000000000000000077777770fffffff0777777705555555055555550fffffff0fffffff07777777000000000000000000000000000000000
0000000000000000000000000000000077777770fffffff0777777705555555055555550fffffff0fffffff07777777000000000000000000000000000000000
0000000000000000000000000000000077777770fffffff0777777705555555055555550fffffff0fffffff07777777000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000077777770fffffff0fffffff0fffffff077777770fffffff0555555507777777000000000000000000000000000000000
0000000000000000000000000000000077777770fffffff0fffffff0fffffff077777770fffffff0555555507777777000000000000000000000000000000000
0000000000000000000000000000000077777770fffffff0fffffff0fffffff077777770fffffff0555555507777777000000000000000000000000000000000
0000000000000000000000000000000077777770fffffff0fffffff0fffffff077777770fffffff0555555507777777000000000000000000000000000000000
0000000000000000000000000000000077777770fffffff0fffffff0fffffff077777770fffffff0555555507777777000000000000000000000000000000000
0000000000000000000000000000000077777770fffffff0fffffff0fffffff077777770fffffff0555555507777777000000000000000000000000000000000
0000000000000000000000000000000077777770fffffff0fffffff0fffffff077777770fffffff0555555507777777000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000777777705555555055555550fffffff0fffffff0fffffff0555555507777777000000000000000000000000000000000
00000000000000000000000000000000777777705555555055555550fffffff0fffffff0fffffff0555555507777777000000000000000000000000000000000
00000000000000000000000000000000777777705555555055555550fffffff0fffffff0fffffff0555555507777777000000000000000000000000000000000
00000000000000000000000000000000777777705555555055555550fffffff0fffffff0fffffff0555555507777777000000000000000000000000000000000
00000000000000000000000000000000777777705555555055555550fffffff0fffffff0fffffff0555555507777777000000000000000000000000000000000
00000000000000000000000000000000777777705555555055555550fffffff0fffffff0fffffff0555555507777777000000000000000000000000000000000
00000000000000000000000000000000777777705555555055555550fffffff0fffffff0fffffff0555555507777777000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000777777707777777077777770777777707777777077777770777777707777777000000000000000000000000000000000
00000000000000000000000000000000777777707777777077777770777777707777777077777770777777707777777000000000000000000000000000000000
00000000000000000000000000000000777777707777777077777770777777707777777077777770777777707777777000000000000000000000000000000000
00000000000000000000000000000000777777707777777077777770777777707777777077777770777777707777777000000000000000000000000000000000
00000000000000000000000000000000777777707777777077777770777777707777777077777770777777707777777000000000000000000000000000000000
00000000000000000000000000000000777777707777777077777770777777707777777077777770777777707777777000000000000000000000000000000000
00000000000000000000000000000000777777707777777077777770777777707777777077777770777777707777777000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000555000005050550055000550000050500000555055500550555055505550555000000000000000000000000000000000
00000000000000000000000000000000005005005050505050505050000050500500505050005000050050505050050000000000000000000000000000000000
00000000000000000000000000000000050000005050505050505050000005000000550055005550050055505500050000000000000000000000000000000000
00000000000000000000000000000000500005005050505050505050000050500500505050000050050050505050050000000000000000000000000000000000
00000000000000000000000000000000555000000550505055505500000050500000505055505500050050505050050000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

